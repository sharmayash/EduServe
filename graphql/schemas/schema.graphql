type Query {
	users: [User!]!
	profiles: [Profile!]!
	hello: String!
}

type Mutation {
	createUser(name: String!, email: String!, password: String!): AuthData!
	createProfile(
		user: ID!
		username: String!
		age: Int!
		mobileNo: Int!
		city: String!
		address: String!
		pincode: Int!
		bio: String!
		education: [ProfileEducation!]!
	): Profile!
}

type User {
	_id: ID!
	name: String!
	email: String!
	password: String
	createdAt: String!
	updatedAt: String!
}

type AuthData {
	userId: String!
	token: ID!
	tokenExpiration: Int!
}

type Profile {
	_id: ID!
	user: ID!
	username: String!
	age: Int!
	mobileNo: Int!
	city: String!
	address: String!
	pincode: Int!
	bio: String!
}

input ProfileEducation {
	institute: String!
	degree: String!
	fieldOfStudy: String!
	from: String!
	to: String!
	current: Boolean!
	description: String!
}

type CollegeProfile {
	_id: ID!
	user: ID!
	collegename: String!
	establishedYear: Int!
	contactNo: Int!
	city: String!
	address: String!
	pincode: Int!
	bio: String!
	coursesOffered: [Courses!]!
}

type Courses {
	courseName: String!
	totalSeats: Int!
	streams: [Streams!]!
}

type Streams {
	streamName: String!
	fees: Int!
	description: Int!
}
